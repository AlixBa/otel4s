/*
 * Copyright 2023 Typelevel
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.typelevel.otel4s
package semconv
package experimental.attributes

// DO NOT EDIT, this is an Auto-generated file from buildscripts/templates/registry/otel4s/attributes/SemanticAttributes.scala.j2
object VcsExperimentalAttributes {

  /** The ID of the change (pull request/merge request) if applicable. This is
    * usually a unique (within repository) identifier generated by the VCS
    * system.
    */
  val VcsRepositoryChangeId: AttributeKey[String] =
    AttributeKey("vcs.repository.change.id")

  /** The human readable title of the change (pull request/merge request). This
    * title is often a brief summary of the change and may get merged in to a
    * ref as the commit summary.
    */
  val VcsRepositoryChangeTitle: AttributeKey[String] =
    AttributeKey("vcs.repository.change.title")

  /** The name of the <a
    * href="https://git-scm.com/docs/gitglossary#def_ref">reference</a> such as
    * <strong>branch</strong> or <strong>tag</strong> in the repository.
    */
  val VcsRepositoryRefName: AttributeKey[String] =
    AttributeKey("vcs.repository.ref.name")

  /** The revision, literally <a
    * href="https://www.merriam-webster.com/dictionary/revision">revised
    * version</a>, The revision most often refers to a commit object in Git, or
    * a revision number in SVN. <p>
    * @note
    *   <p> The revision can be a full <a
    *   href="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-5.pdf">hash
    *   value (see glossary)</a>, of the recorded change to a ref within a
    *   repository pointing to a commit <a
    *   href="https://git-scm.com/docs/git-commit">commit</a> object. It does
    *   not necessarily have to be a hash; it can simply define a <a
    *   href="https://svnbook.red-bean.com/en/1.7/svn.tour.revs.specifiers.html">revision
    *   number</a> which is an integer that is monotonically increasing. In
    *   cases where it is identical to the `ref.name`, it SHOULD still be
    *   included. It is up to the implementer to decide which value to set as
    *   the revision based on the VCS system and situational context.
    */
  val VcsRepositoryRefRevision: AttributeKey[String] =
    AttributeKey("vcs.repository.ref.revision")

  /** The type of the <a
    * href="https://git-scm.com/docs/gitglossary#def_ref">reference</a> in the
    * repository.
    */
  val VcsRepositoryRefType: AttributeKey[String] =
    AttributeKey("vcs.repository.ref.type")

  /** The <a href="https://en.wikipedia.org/wiki/URL">URL</a> of the repository
    * providing the complete address in order to locate and identify the
    * repository.
    */
  val VcsRepositoryUrlFull: AttributeKey[String] =
    AttributeKey("vcs.repository.url.full")

  /** Values for [[VcsRepositoryRefType]].
    */
  abstract class VcsRepositoryRefTypeValue(val value: String)
  object VcsRepositoryRefTypeValue {

    /** <a
      * href="https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefbranchabranch">branch</a>
      */
    case object Branch extends VcsRepositoryRefTypeValue("branch")

    /** <a
      * href="https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddeftagatag">tag</a>
      */
    case object Tag extends VcsRepositoryRefTypeValue("tag")
  }

}
